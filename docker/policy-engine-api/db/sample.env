DB_ROOT_PASSWORD=R007Pa55word
DB_SCHEMA=policy_engine_db
DB_USER=policy_engine_db_user
DB_PASSWORD=U5erPa55word
DB_PORT=3311
DB_HOST=localhost
DB_DATAFILES_DIR=../../../../policy-engine-data-files/api
DB_INIT_SCRIPT=../../../policy-engine-modules/policy-engine-api/src/test/resources/db/initialise-policy-engine-db.sql


#########################################################
##           Notes on running db
#########################################################
## 1. Copy `sample.env` to `.env` and make changes to the copied file
##    Do not change `sample.env`.
##    `.env` files are ignored and not copied to github. It is therefore
##    recommended that you keep a copy of your `.env` file somewhere safe
##    to be able use it in the future.
## 
## 2. Ensure the path provided in DB_DATAFILES_DIR is valid and exists
##
## 3. If DB_DATAFILES_DIR already contains data files  
##    i.e. a db already exists, then no initialisation takes 
##    place. The existing db is used unchanged.
##
## 4. If DB_DATAFILES_DIR is empty then a new database is 
##    created using the sql script provided in DB_INIT_SCRIPT
##    Ensure that the file referenced in DB_INIT_SCRIPT is present
##
## 5. In a terminal session `cd` to the folder where this file is located.
##    Execute `docker compose up -d` to start the container and the database
##    It may some time for the start up to complete the first time.
##    At the end of the start up process a docker container named `policy-engine-db`
##    should be created and running. Check by executing `docker ps`
##
## 6. To check everything is started up correctly
##    a) Shell in to the container with `docker exec -it <container_name> /bin/bash`
##    b) Once on the cmd prompt in the container run `mysql -u <DB_USER> -p<DB_PASSWORD> --host=localhost --port=<DB_PORT>`
##    c) At the mysql prompt run `show databases;`. A db named with the value of DB_SCHEMA property should be there.
##    d) It is also worth trying to login as mysql-root. run `mysql -u root -p<DB_ROOT_PASSWORD> --host=localhost --port=<DB_PORT>`
##



#########################################################
##           Fixing issues with initialisation
#########################################################
##
## Sometimes when a database dump is exported the order of 
## object creation can be an issue. 
##
## Normally, using MySql-Workbench to import the dump will 
## work, but executing the sql-script, say on the command
## line or from within java would fail because the script 
## is not creating objects and constraints collated and 
## ordered to account for dependencies
##
## To fix this it is neccessary to switch off certain 
## constraints, specifically the FOREIGN_KEY_CHECKS
##
## Add at the top of the script
##          `SET FOREIGN_KEY_CHECKS=0;` 
##
## Add at the bottom of the script
##          `SET FOREIGN_KEY_CHECKS=1;` 