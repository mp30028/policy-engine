#################################### [req] #######################################################
## Main entry point
## since our command on the CLI is `req`, OpenSSL is going to look for a matching entry-point
## This lets you store multiple command configs together, in a single file
##
[req]
## algorithm and number of bits to use when creating the private key. The default is set to rsa:2048
default_bits = 2048

## Same as `-nodes` argument, to prevent encryption of private key (passphrase)
encrypt_key = no

## Explicitly tells OpenSSL which message digest algorithm to use
## Good practice to specify, since older versions might default to MD5 (insecure)
default_md = sha256

## If you don't use `-keyout` in the CLI, this determines the private key filename
default_keyfile = keycloak.key

## These are values that are used to *distinguish* the certificate, such as the country and organization
## These values are normally collected via Q&A prompt in the CLI if config file is not used
distinguished_name = keycloak_distinguish_name_section

## Ensures that distinguished_name values will be pulled from this file, as
## opposed to prompting the user in the CLI
prompt = no

## Used for extensions to the self-signed cert OpenSSL is going to generate for us
x509_extensions = x509_extensions_section

[keycloak_distinguish_name_section]
## These are all values that are used to *distinguish* the certificate, such as 
## the country and organization
## Many of these have shorter keys that should be used for non-prompt values,
## and long keys that should have a prompt string to display to the user, and
## optionally a default value if the prompt is skipped (see below note)
## For long keys, if you use fieldName with `_default` at the end, the value
## will be used if prompt!==true, or if the user skips the prompt in the CLI

# Long-Key = countryName
C = UK

# Long-Key = stateOrProvinceName
ST = London

# Long-Key = localityName
L = Ilford

# Long-Key = organizationName
O = Zonesoft

# Long-Key = organizationalUnitName
OU = Development

# Long-Key = commonName
# Pay extra attention to common name - You can only define one, and it is the
# value that is displayed to the user. Should NOT include protocol, but can
# be in format of domain.tld, www.domain.tld, or even wildcard, to share a
# common cert across multiple subdomains - `*.domain.tld`.
# Also, any value that you use here !*** MUST ***! ALSO be included in the SAN
# (subject alternative name) section (subjectAltName), if you choose to
# include that section. See: https://stackoverflow.com/a/25971071/11447682
CN = *.zonesoft.dev

[x509_extensions_section]
# Used for (generically) custom field-value pairs that should be associated
# with the cert, such as extra DNS names, IP addresses, and emails
subjectAltName = @alternate_names_section

[alternate_names_section]
# Extra domain names to associate with the cert
# These can be a mix of wildcard, IP address, subdomain, etc.
DNS.1 = *.zonesoft.dev
DNS.2 = localhost
DNS.3 = 127.0.0.1
DNS.4 = host.docker.internal
DNS.5 = keycloak-app
# NB:The ip address assigned to DNS.6 was taken from /etc/resolv.conf on 
# windows wsl by executing ` ubuntu2204 run "cat /etc/resolv.conf" `
# This is the nameserver entry in /etc/resolv.conf and is the ip-address
# of the docker host on windows
DNS.6 = 172.22.176.1

# Etc.
# See:
# - https://www.openssl.org/docs/man1.1.1/man5/x509v3_config.html#Subject-Alternative-Name
# - https://en.wikipedia.org/wiki/Subject_Alternative_Name

